# database 
use tech_shop;

#insertions
#customer tables
INSERT INTO customer (first_name, last_name, email, phone, address) VALUES
  ('Naveen', 'Chander', 'navechand@gmail.com', 1234567890, '33 Marina road, Chennai'),
  ('Balaji', 'Ram', 'rambalaji@gmail.com', 9876543210, '24 Lawspet, Puducherry'),
  ('Abishek', 'Krishna', 'ajii@gmail.com', 5551212, '124 MG Road, Bangalore'),
  ('Michael', 'Tom', 'michael@gmail.com', 7890123456, '1 Rubble Way, Mumbai'),
  ('Martin', 'Luther', 'martinluther@wb.com', 2345678901, 'Duckburg Apartments, Kerala');

select * from customer;



INSERT INTO product (name, price) VALUES
  ('Laptop', 799.99),
  ('Smartphone', 499.00),
  ('Headphones', 79.95),
  ('Smartwatch', 249.99),
  ('Tablet', 349.50);

  
  select * from product;

INSERT INTO orders (customer_id, product_id, order_date, total_amount) VALUES
  (1, 1, '2024-03-08', 799.99),
  (3, 2, '2024-03-07', 499.00),
  (2, 3, '2024-03-06', 79.95),
  (1, 4, '2024-03-05', 249.99),
  (4, 5, '2024-03-04', 349.50);


select * from orders;

INSERT INTO inventory (quantity_stock, laststock_update, product_id) VALUES
  ('10', '2024-03-08', 1),
  ('5', '2024-03-07', 2),
  ('20', '2024-03-06', 3),
  ('7', '2024-03-01', 4),
  ('0', '2024-02-08', 5);

select * from inventory;


#Task 2 
/* 1. Write an SQL query to retrieve the names and emails of all customers.
*/
SELECT first_name,email FROM customer;
#2. Write an SQL query to list all orders with their order dates and corresponding customer names.
/*
3. Write an SQL query to insert a new customer record into the "Customers" table. Include customer information such as name, email, and address.
*/
INSERT INTO customer (first_name, last_name, email, phone, address) VALUES
  ('Christopher', 'Nolan', 'nolan@gmail.com', 0442244555, '36 Ghazi road, Chennai');
/*
4. Write an SQL query to update the prices of all electronic gadgets in the "Products" table by increasing them by 10%.
*/
UPDATE product
SET Price = Price * 1.1;
select * from product;
-- 5. Write an SQL query to delete a specific order and its associated order details from the "Orders" and "OrderDetails" tables. Allow users to input the order ID as a parameter.
/*
6. Write an SQL query to insert a new order into the "Orders" table. Include the customer ID, order date, and any other necessary information.
*/
INSERT INTO orders (customer_id, product_id, order_date, total_amount)
VALUES (6, 3, '2024-03-14', 79.95);
/*
7. Write an SQL query to update the contact information (e.g., email and address) of a specific customer in the "Customers" table. Allow users to input the customer ID and new contact information.
*/
UPDATE customer SET Email = 'chand@gmai.com',Address = '33, City Road, Mumbai'
WHERE id = 1;

select * from customer;

-- 8. Write an SQL query to recalculate and update the total cost of each order in the "Orders" table based on the prices and quantities in the "OrderDetails" table.
-- 9.Write an SQL query to delete all orders and their associated order details for a specific customer from the "Orders" and "OrderDetails" tables. Allow users to input the customer ID as a parameter.
 DELETE FROM orders WHERE customerid = 7;
/*
10. Write an SQL query to insert a new electronic gadget product into the "Products" table, including product name, category, price, and any other relevant details.
*/
INSERT INTO product (name, price) VALUES
('Visonpro', 1199.99);
-- 11. Write an SQL query to update the status of a specific order in the "Orders" table (e.g., from "Pending" to "Shipped"). Allow users to input the order ID and the new status.
/*
12. Write an SQL query to calculate and update the number of orders placed by each customer in the "Customers" table based on the data in the "Orders" table.
*/

#Task 3. Aggregate functions, Having, Order By, GroupBy and Joins:

/*
1. Write an SQL query to retrieve a list of all orders along with customer information (e.g., customer name) for each order.
*/
SELECT o.customer_id, c.first_name, c.last_name, o.product_id, 
o.order_date, o.total_amount
FROM orders o
INNER JOIN customer c ON o.customer_id = c.id;

-- 2. Write an SQL query to find the total revenue generated by each electronic gadget product. Include the product name and the total revenue.
/*
3. Write an SQL query to list all customers who have made at least one purchase. Include their names and contact information.
*/
SELECT c.first_name, c.last_name, c.email, c.phone, c.address
FROM customer c
INNER JOIN orders o ON c.id = o.customer_id
GROUP BY c.id;

